{"ast":null,"code":"var _jsxFileName = \"/Users/luismiranda/Projects/Geek-Text/CEN4010/src/pages/components/Searchbar.js\";\nimport React, { Component } from 'react';\nimport request from 'superagent';\nimport Gallery from './Gallery';\nimport { FormControl, FormGroup, InputGroup } from 'react-bootstrap'; //import { Form, InputGroup} from 'react-bootstrap';\n//import Form from 'react-bootstrap/Form';\n//import InputGroup from 'react-bootstrap/InputGroup';\n\nimport '../style/util.css';\nimport '../style/browsing.css';\n\nclass Searchbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      searching: false\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      request.get(\"https://www.googleapis.com/books/v1/volumes\").query({\n        q: this.state.searchField\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          items: [...data.body.items]\n        });\n      });\n    };\n\n    this.handleSort = e => {\n      this.setState({\n        sort: e.target.value\n      });\n    };\n\n    this.state = {\n      query: '',\n      items: [],\n      sort: ''\n    };\n  }\n\n  search() {\n    const API_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n    fetch(`${API_URL}${this.state.query}`).then(response => response.json()).then(json => {\n      let {\n        items\n      } = json;\n      this.setState({\n        items\n      });\n    }); // TODO: Add a catch method here in case the API call fails\n  }\n\n  render() {\n    const filteredBooks = this.state.items.sort((a, b) => {\n      if (this.state.sort == 'Newest') {\n        console.log(\"in newest\");\n        return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4));\n      } else if (this.state.sort == 'Oldest') {\n        return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4));\n      }\n\n      return;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"text\",\n      placeholder: \"Search book...\",\n      onChange: event => this.setState({\n        query: event.target.value\n      }),\n      onKeyPress: event => {\n        if ('Enter' === event.key) {\n          this.search();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: this.props.sort,\n      onChange: this.props.handleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Sort\"), React.createElement(\"option\", {\n      value: \"Newest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Newest\"), React.createElement(\"option\", {\n      value: \"Oldest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Oldest\"), React.createElement(\"option\", {\n      value: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Title\")))), React.createElement(Gallery, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Searchbar;","map":{"version":3,"sources":["/Users/luismiranda/Projects/Geek-Text/CEN4010/src/pages/components/Searchbar.js"],"names":["React","Component","request","Gallery","FormControl","FormGroup","InputGroup","Searchbar","constructor","props","state","search","searching","handleSubmit","e","preventDefault","get","query","q","searchField","then","data","console","log","setState","items","body","handleSort","sort","target","value","API_URL","fetch","response","json","render","filteredBooks","a","b","parseInt","volumeInfo","publishedDate","substring","event","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport request from 'superagent';\nimport Gallery from './Gallery';\nimport { FormControl, FormGroup, InputGroup } from 'react-bootstrap';\n//import { Form, InputGroup} from 'react-bootstrap';\n//import Form from 'react-bootstrap/Form';\n//import InputGroup from 'react-bootstrap/InputGroup';\nimport '../style/util.css';\nimport '../style/browsing.css';\n\nclass Searchbar extends React.Component {\n    state = {\n        search: '',\n        searching: false\n    }\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            query: '',\n            items: [],\n            sort: ''\n        };\n    }\n\n    search() {\n        const API_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n        fetch(`${API_URL}${this.state.query}`)\n            .then(response => response.json())\n            .then(json => {\n            let {items} = json;\n            this.setState({items})\n            }); // TODO: Add a catch method here in case the API call fails\n    }\n   \n    handleSubmit = (e) => {\n        e.preventDefault();\n        request\n            .get(\"https://www.googleapis.com/books/v1/volumes\")\n            .query({ q: this.state.searchField })\n            .then((data) => {\n                console.log(data);\n                this.setState({ items: [...data.body.items] })\n        })\n    }\n\n    handleSort = (e) => {\n        this.setState({ sort: e.target.value});\n    }\n\n    render() {\n        const filteredBooks = this.state.items.sort((a, b) => {\n            if(this.state.sort == 'Newest'){\n                console.log(\"in newest\")\n                return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4));\n            }\n            else if(this.state.sort == 'Oldest'){\n                return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4));\n            }\n          \n          return;\n        })\n        return(\n            <div>\n                <div className=\"search-area\">\n                    <FormGroup>\n                        <InputGroup>\n                            <FormControl type=\"text\" placeholder=\"Search book...\"\n                            onChange = {event => this.setState({query: event.target.value}) }\n                            onKeyPress = { event => {\n                                if ('Enter' === event.key) {\n                                    this.search();\n                                }\n                            }} />\n                        </InputGroup>\n                    </FormGroup>\n                    {/*<div className='search-area'>*/}\n                    <form onSubmit={this.props.handleSubmit}>\n                        <select value={this.props.sort} onChange={this.props.handleSort}>\n                            <option value=\"\" disabled selected>Sort</option>\n                            <option value=\"Newest\">Newest</option>\n                            <option value=\"Oldest\">Oldest</option>\n                            <option value=\"Title\">Title</option>\n                        </select>\n                    </form>\n                    {/*</div>*/}\n                </div>\n                <Gallery items = {this.state.items}/>\n            </div>\n        )\n    }\n}\n\nexport default Searchbar;"]},"metadata":{},"sourceType":"module"}